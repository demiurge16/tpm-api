version: "3.8"

services:
  application:
    container_name: application
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        SPRING_PROFILES_ACTIVE: qa
    ports:
      - "5005:5005"
      - "8080:8080"
    networks:
      - tpm-network
    depends_on:
      - db
      - cache
      - logstash

  auth-server:
    container_name: auth-server
    build:
      context: ./infrastructure/auth-server
      dockerfile: ./keycloak.Dockerfile
    ports:
      - "8081:8080"
      - "8082:8443"
    networks:
      - tpm-network
    depends_on:
      - db
      - cache
      - logstash

  db:
    container_name: db
    build:
      context: ./infrastructure/db
      dockerfile: ./db.Dockerfile
    ports:
      - "5432:5432"
    networks:
      - tpm-network
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/init.sql

  cache:
    container_name: cache
    build:
      context: ./infrastructure/cache
      dockerfile: ./cache.Dockerfile
    ports:
      - "6379:6379"
    networks:
      - tpm-network
    volumes:
      - cache-data:/data

  file-storage:
    container_name: file-storage
    build:
      context: ./infrastructure/file-storage
      dockerfile: ./file-storage.Dockerfile
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - tpm-network
    volumes:
      - ./infrastructure/file-storage/entrypoint.sh:/entrypoint.sh:ro,Z
      - file-storage-data:/data

  # Logging and monitoring services

  monitoring-setup:
    container_name: monitoring-setup
    build:
      context: ./infrastructure/monitoring/setup
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./infrastructure/monitoring/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./infrastructure/monitoring/setup/lib.sh:/lib.sh:ro,Z
      - ./infrastructure/monitoring/setup/roles:/roles:ro,Z
      - monitoring-setup-data:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - tpm-network
    depends_on:
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./infrastructure/monitoring/elasticsearch
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./infrastructure/monitoring/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch-data:/usr/share/elasticsearch/data:Z
    expose:
      - "9200"
      - "9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - tpm-network
    restart: unless-stopped

  logstash:
    container_name: logstash
    build:
      context: ./infrastructure/monitoring/logstash
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./infrastructure/monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./infrastructure/monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5000:5000"
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - tpm-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    container_name: kibana
    build:
      context: ./infrastructure/monitoring/kibana
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./infrastructure/monitoring/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - tpm-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  db-data:
  cache-data:
  file-storage-data:
  monitoring-setup-data:
  elasticsearch-data:

networks:
  tpm-network:
    driver: bridge
