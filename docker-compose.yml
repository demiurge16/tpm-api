version: "3.8"

services:
  api:
    container_name: api
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        SPRING_PROFILES_ACTIVE: dev
    links:
      - db
      - cache
      - logstash
    ports:
      - "8080:8080"
    volumes:
      - app-data:/app

  db:
    image: "postgres:alpine"
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: tpm-api
      POSTGRES_PASSWORD: 1qaz@WSX
      POSTGRES_DB: tpm-api
    volumes:
      - db-data:/var/lib/postgresql/data

  cache:
    image: "redis/redis-stack"
    container_name: cache
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - cache-data:/data

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.3"
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: "docker.elastic.co/kibana/kibana:8.5.3"
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  logstash:
    image: "docker.elastic.co/logstash/logstash:8.5.3"
    container_name: logstash
    ports:
      - "5000:5000"
      - "5044:5044"
      - "9600:9600"
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
      - app_name=tpm-api
      - host=localhost
      - app_port=8080
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

volumes:
  app-data:
  db-data:
  cache-data:
  elasticsearch-data:
